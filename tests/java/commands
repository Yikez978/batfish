#this file assumes that we are running from top-level source directory

# example testrig
test tests/java/init.ref init-testrig test_rigs/example
test tests/java/init-delta.ref init-delta-testrig test_rigs/example-with-delta
test tests/java/genDp.ref generate-dataplane
test tests/java/genDp-delta.ref generate-delta-dataplane
test tests/java/aclReachability.ref get aclReachability
test tests/java/assert.ref get assert assertions=[{"assertion":"(eq 15 (pathsize '$.nodes[*]'))"},{"assertion":"(eq 0 (pathsize '$.nodes[\"as1border\"]'))"},{"assertion":"(not (eq 0 (pathsize '$.nodes[\"as1border1\"]')))"}, {"assertion":"(eq (pathsize '$.nodes[*].aaaSettings.newModel') (pathsize '$.nodes[*].aaaSettings[?(@.newModel == true)]'))"}]
test tests/java/bgpSessionCheck.ref get bgpSessionCheck
test tests/java/compareSameName.ref get compareSameName
test tests/java/error.ref -error get error
test tests/java/ipsecVpnCheck.ref get ipsecVpnCheck
test tests/java/isisLoopbacks.ref get isisLoopbacks
test tests/java/neighbors.ref get neighbors
test tests/java/neighbors-ebgp.ref get neighbors neighborType=["ebgp"]
test tests/java/nodes-summary.ref get nodes summary=true
test tests/java/nodes.ref get nodes summary=false
test tests/java/nodes-diff.ref get nodes summary=false | differential=true
test tests/java/ospfLoopbacks.ref get ospfLoopbacks
test tests/java/pairwiseVpnConnectivity.ref get pairwiseVpnConnectivity
test tests/java/routes.ref get routes
test tests/java/routes-diff.ref get routes differential=true
test tests/java/selfAdjacencies.ref get selfAdjacencies
test tests/java/traceroute-1-2.ref get traceroute ingressNode="as1core1" | dstIp="2.128.0.101"
test tests/java/traceroute-2-1.ref get traceroute ingressNode="host2" | dstIp="1.0.1.1"
test tests/java/multipath-host1.ref get reachability type="multipath" | ingressNodeRegex="host1" | srcIps=["2.128.0.0"] | dstIps=["3.0.1.2"] | ipProtocols=["TCP"] | srcPorts=[0] | dstPorts=[0]
test tests/java/multipath-host2.ref get reachability type="multipath" | ingressNodeRegex="host2" | srcIps=["2.128.0.0"] | dstIps=["1.0.1.1"] | ipProtocols=["UDP"] | srcPorts=[0] | dstPorts=[0]
test tests/java/undefinedReferences.ref get undefinedReferences
test tests/java/uniqueIpAssignments.ref get uniqueIpAssignments
test tests/java/unusedStructures.ref get unusedStructures

# disable-as-reuse
test tests/java/init-dc-as-reuse.ref init-testrig test_rigs/dc-as-reuse
test tests/java/routes-dc-as-reuse.ref get routes

# parsing unit-tests through nodes question
test tests/java/init-unit-tests.ref init-testrig test_rigs/unit-tests
test tests/java/nodes-unit-tests.ref get nodes summary=false
